{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/react-doc/src/App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'; // App.js is normal javascript file which has JSX code inside render function. \n// The name App is user-defined you can keep any name but remember to save as .js file.\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1>Hello World!</h1>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\n// function formatName(user) {\n//   return user.firstName + ' ' + user.lastName\n// }\n// // export function component\n// export function myelement(user) {   \n//   if (user) {\n//     return <h1>hello, {formatName(user)}</h1>\n//   } else {\n//     return <h1>hello, starnger</h1>\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n\n    this.click = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n      console.log(\"console: \" + this.state.count); // 0\n\n      this.setState({\n        count: this.state.count + 1\n      }, () => {\n        // count:1\n        console.log(\"console from callback: \" + this.state.count); // 2\n      });\n      this.setState(prevState => {\n        console.log(\"console from func: \" + prevState.count); // 1  上一个+1\n\n        return {\n          count: prevState.count + 1 //2\n\n        };\n      }, () => {\n        console.log('last console: ' + this.state.count);\n      });\n    };\n  }\n\n  render() {\n    const {\n      count\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn\",\n        onClick: this.click,\n        children: \"click me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  } // render() {\n  //   console.log('render...', this.state);\n  //   const { name, age } = this.state;\n  //   return (\n  //     <div>\n  //       <span>{name + '---' + age}</span>\n  //       <button id='btn' onClick={this.click}>click me!</button>\n  //     </div>\n  //   )\n  // }\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jia/Desktop/react-doc/src/App.js"],"names":["React","Component","App","state","count","click","setState","console","log","prevState","render"],"mappings":";AAAA;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SA2C1BE,KA3C0B,GA2ClB;AACNC,MAAAA,KAAK,EAAE;AADD,KA3CkB;;AAAA,SA8C1BC,KA9C0B,GA8ClB,MAAM;AACZ,WAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAc,KAAKL,KAAL,CAAWC,KAArC,EAFY,CAEiC;;AAC7C,WAAKE,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd,EAA+C,MAAM;AAAI;AACvDG,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4B,KAAKL,KAAL,CAAWC,KAAnD,EADmD,CACQ;AAC5D,OAFD;AAGA,WAAKE,QAAL,CAAcG,SAAS,IAAI;AACzBF,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBC,SAAS,CAACL,KAA9C,EADyB,CAC6B;;AACtD,eAAO;AACLA,UAAAA,KAAK,EAAEK,SAAS,CAACL,KAAV,GAAkB,CADpB,CACuB;;AADvB,SAAP;AAGD,OALD,EAKG,MAAM;AACPG,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB,KAAKL,KAAL,CAAWC,KAA1C;AACD,OAPD;AASD,KA7DyB;AAAA;;AA8D1BM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAA,8BACE;AAAA,kBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,EAAE,EAAC,KAAX;AAAiB,QAAA,OAAO,EAAE,KAAKC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAtEyB,CAyE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAlF0B;;AAqF5B,eAAeH,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\n// App.js is normal javascript file which has JSX code inside render function. \n// The name App is user-defined you can keep any name but remember to save as .js file.\n\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1>Hello World!</h1>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n\n// function formatName(user) {\n//   return user.firstName + ' ' + user.lastName\n// }\n\n// // export function component\n// export function myelement(user) {   \n//   if (user) {\n//     return <h1>hello, {formatName(user)}</h1>\n//   } else {\n//     return <h1>hello, starnger</h1>\n//   }\n// }\n\nclass App extends Component {\n  // state = {\n  //   name: 'rose',\n  //   age: 0,\n  // };\n\n  // 多次setState函数方式（preState拿到了上次setState之后的结果，作为参数传递给下一个setState，从感觉上像是立马更新了state）不合并\n\n  // click = () => {\n  //   console.log('start!')\n\n  //   this.setState((preState) => {\n  //     console.log('pre1:', preState)\n  //     return { name: 'name1', age: preState.age + 1 }\n  //   })\n\n  //   this.setState((preState) => {\n  //     console.log('pre2:', preState)\n  //     return { name: 'name2', age: preState.age + 1 }\n  //   })\n\n  //   this.setState((preState) => {\n  //     console.log('pre3:', preState)\n  //     return { name: 'name3', age: preState.age + 1 }\n  //   })\n\n\n  //   console.log('end!')\n  // };\n\n  // 多次setState对象方式（每次setState都执行，执行后没有立马更新this.state,每次setState里取得this.state的值都是最初的值）合并\n\n  // click = () => {\n  //   console.log('start')\n  //   this.setState((state) => ({ name: 'name1', age: state.age + 1 }))\n  //   this.setState((state) => ({ name: 'name2', age: state.age + 1 }))\n  //   this.setState((state) => ({ name: 'name3', age: state.age + 1 }))  // setState触发但是没有render\n  //   this.setState((state) => ({ name: 'name4', age: state.age + 1 }))   // age：5/10/15...\n  //   // this.setState({ name: 'name6', age: this.state.age + 1 })   // age: 2/4/6...   从这之后开始算（name4+name5） 0+1+1 = 2\n  //   this.setState((state) => ({ name: 'name5', age: state.age + 1 }))\n  //   console.log('end')\n  // };\n\n  state = {\n    count: 0\n  }\n  click = () => {\n    this.setState({ count: this.state.count + 1 });\n    console.log(\"console: \" + this.state.count); // 0\n    this.setState({ count: this.state.count + 1 }, () => {   // count:1\n      console.log(\"console from callback: \" + this.state.count); // 2\n    });\n    this.setState(prevState => {\n      console.log(\"console from func: \" + prevState.count); // 1  上一个+1\n      return {\n        count: prevState.count + 1  //2\n      };\n    }, () => {\n      console.log('last console: ' + this.state.count)\n    });\n\n  }\n  render() {\n    const { count } = this.state\n    return (\n      <div>\n        <span>{count}</span>\n        <button id='btn' onClick={this.click}>click me!</button>\n      </div>\n    )\n  }\n\n\n  // render() {\n  //   console.log('render...', this.state);\n  //   const { name, age } = this.state;\n  //   return (\n  //     <div>\n  //       <span>{name + '---' + age}</span>\n  //       <button id='btn' onClick={this.click}>click me!</button>\n  //     </div>\n  //   )\n  // }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}