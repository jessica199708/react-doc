{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/react-doc/src/App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'; // App.js is normal javascript file which has JSX code inside render function. \n// The name App is user-defined you can keep any name but remember to save as .js file.\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1>Hello World!</h1>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\n// function formatName(user) {\n//   return user.firstName + ' ' + user.lastName\n// }\n// // export function component\n// export function myelement(user) {   \n//   if (user) {\n//     return <h1>hello, {formatName(user)}</h1>\n//   } else {\n//     return <h1>hello, starnger</h1>\n//   }\n// }\n// class App extends Component {\n// state = {\n//   name: 'rose',\n//   age: 0,\n// };\n// 多次setState函数方式（preState拿到了上次setState之后的结果，作为参数传递给下一个setState，从感觉上像是立马更新了state）不合并\n// click = () => {\n//   console.log('start!')\n//   this.setState((preState) => {\n//     console.log('pre1:', preState)\n//     return { name: 'name1', age: preState.age + 1 }\n//   })\n//   this.setState((preState) => {\n//     console.log('pre2:', preState)\n//     return { name: 'name2', age: preState.age + 1 }\n//   })\n//   this.setState((preState) => {\n//     console.log('pre3:', preState)\n//     return { name: 'name3', age: preState.age + 1 }\n//   })\n//   console.log('end!')\n// };\n// 多次setState对象方式（每次setState都执行，执行后没有立马更新this.state,每次setState里取得this.state的值都是最初的值）合并\n// click = () => {\n//   console.log('start')\n//   this.setState((state) => ({ name: 'name1', age: state.age + 1 }))\n//   this.setState((state) => ({ name: 'name2', age: state.age + 1 }))\n//   this.setState((state) => ({ name: 'name3', age: state.age + 1 }))  // setState触发但是没有render\n//   this.setState((state) => ({ name: 'name4', age: state.age + 1 }))   // age：5/10/15...\n//   // this.setState({ name: 'name6', age: this.state.age + 1 })   // age: 2/4/6...   从这之后开始算（name4+name5） 0+1+1 = 2\n//   this.setState((state) => ({ name: 'name5', age: state.age + 1 }))\n//   console.log('end')\n// };\n// state = {\n//   count: 0\n// }\n// click = () => {\n//   this.setState({ count: this.state.count + 1 });\n//   console.log(\"console: \" + this.state.count); // count: 0   第一步\n//   this.setState({ count: this.state.count + 1 }, () => {   // count: 1   第二步\n//     console.log(\"console from callback: \" + this.state.count); // count: 2   第五步\n//   });\n//   this.setState(prevState => {\n//     console.log(\"console from func: \" + prevState.count); // count: 1  第三步\n//     return {\n//       count: prevState.count + 1  // count:2  第四步  \n//     };\n//   }, () => {\n//     console.log('last console: ' + this.state.count) // count:2  第六步  \n//   });\n// }\n// render() {\n//   const { count } = this.state\n//   return (\n//     <div>\n//       <span>{count}</span>\n//       <button id='btn' onClick={this.click}>click me!</button>\n//     </div>\n//   )\n// }\n// render() {\n//   console.log('render...', this.state);\n//   const { name, age } = this.state;\n//   return (\n//     <div>\n//       <span>{name + '---' + age}</span>\n//       <button id='btn' onClick={this.click}>click me!</button>\n//     </div>\n//   )\n// }\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The water would boil.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The water would not boil.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_c = BoilingVerdict;\nconst tempType = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\n\nfunction convert(temperature, func) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  const output = func(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    //this.setState({ temperature: e.target.value })\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const type = this.props.type;\n    const temperature = this.props.temperature;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: [\"Enter temperature in :\", tempType[type]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: temperature,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: '',\n      type: 'c'\n    };\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({\n      temperature,\n      type: 'c'\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      temperature,\n      type: 'f'\n    });\n  }\n\n  render() {\n    const type = this.state.type;\n    const temperature = this.state.temperature;\n    const celsius = type === 'f' ? convert(temperature, toCelsius) : temperature;\n    const fahrenheit = type === 'c' ? convert(temperature, toFahrenheit) : temperature;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n        type: \"c\",\n        temperature: celsius,\n        onTemperatureChange: this.handleCelsiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n        type: \"f\",\n        temperature: fahrenheit,\n        onTemperatureChange: handleFahrenheitChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"sources":["/Users/jia/Desktop/react-doc/src/App.js"],"names":["React","Component","BoilingVerdict","props","celsius","tempType","c","f","toCelsius","fahrenheit","toFahrenheit","convert","temperature","func","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","TemperatureInput","constructor","handleChange","bind","e","onTemperatureChange","target","value","render","type","Calculator","state","handleCelsiusChange","handleFahrenheitChange","setState"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\n// App.js is normal javascript file which has JSX code inside render function. \n// The name App is user-defined you can keep any name but remember to save as .js file.\n\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1>Hello World!</h1>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n\n// function formatName(user) {\n//   return user.firstName + ' ' + user.lastName\n// }\n\n// // export function component\n// export function myelement(user) {   \n//   if (user) {\n//     return <h1>hello, {formatName(user)}</h1>\n//   } else {\n//     return <h1>hello, starnger</h1>\n//   }\n// }\n\n\n// class App extends Component {\n// state = {\n//   name: 'rose',\n//   age: 0,\n// };\n\n// 多次setState函数方式（preState拿到了上次setState之后的结果，作为参数传递给下一个setState，从感觉上像是立马更新了state）不合并\n\n// click = () => {\n//   console.log('start!')\n\n//   this.setState((preState) => {\n//     console.log('pre1:', preState)\n//     return { name: 'name1', age: preState.age + 1 }\n//   })\n\n//   this.setState((preState) => {\n//     console.log('pre2:', preState)\n//     return { name: 'name2', age: preState.age + 1 }\n//   })\n\n//   this.setState((preState) => {\n//     console.log('pre3:', preState)\n//     return { name: 'name3', age: preState.age + 1 }\n//   })\n\n\n//   console.log('end!')\n// };\n\n// 多次setState对象方式（每次setState都执行，执行后没有立马更新this.state,每次setState里取得this.state的值都是最初的值）合并\n\n// click = () => {\n//   console.log('start')\n//   this.setState((state) => ({ name: 'name1', age: state.age + 1 }))\n//   this.setState((state) => ({ name: 'name2', age: state.age + 1 }))\n//   this.setState((state) => ({ name: 'name3', age: state.age + 1 }))  // setState触发但是没有render\n//   this.setState((state) => ({ name: 'name4', age: state.age + 1 }))   // age：5/10/15...\n//   // this.setState({ name: 'name6', age: this.state.age + 1 })   // age: 2/4/6...   从这之后开始算（name4+name5） 0+1+1 = 2\n//   this.setState((state) => ({ name: 'name5', age: state.age + 1 }))\n//   console.log('end')\n// };\n\n// state = {\n//   count: 0\n// }\n// click = () => {\n//   this.setState({ count: this.state.count + 1 });\n//   console.log(\"console: \" + this.state.count); // count: 0   第一步\n//   this.setState({ count: this.state.count + 1 }, () => {   // count: 1   第二步\n//     console.log(\"console from callback: \" + this.state.count); // count: 2   第五步\n//   });\n//   this.setState(prevState => {\n//     console.log(\"console from func: \" + prevState.count); // count: 1  第三步\n//     return {\n//       count: prevState.count + 1  // count:2  第四步  \n//     };\n//   }, () => {\n//     console.log('last console: ' + this.state.count) // count:2  第六步  \n//   });\n\n// }\n// render() {\n//   const { count } = this.state\n//   return (\n//     <div>\n//       <span>{count}</span>\n//       <button id='btn' onClick={this.click}>click me!</button>\n//     </div>\n//   )\n// }\n\n\n// render() {\n//   console.log('render...', this.state);\n//   const { name, age } = this.state;\n//   return (\n//     <div>\n//       <span>{name + '---' + age}</span>\n//       <button id='btn' onClick={this.click}>click me!</button>\n//     </div>\n//   )\n// }\n// }\n\n// export default App;\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return <p>The water would boil.</p>\n  } else {\n    return <p>The water would not boil.</p>\n  }\n}\n\nconst tempType = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n}\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n\nfunction convert(temperature, func) {\n  const input = parseFloat(temperature)\n  if (Number.isNaN(input)) {\n    return ''\n  }\n  const output = func(input)\n  const rounded = Math.round(output * 1000) / 1000\n  return rounded.toString()\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(e) {\n    //this.setState({ temperature: e.target.value })\n    this.props.onTemperatureChange(e.target.value)\n  }\n  render() {\n    const type = this.props.type\n    const temperature = this.props.temperature\n    return (\n      <fieldset>\n        <legend>Enter temperature in :{tempType[type]}</legend>\n        <input\n          value={temperature}\n          onChange={this.handleChange}>\n        </input>\n      </fieldset>\n    )\n  }\n}\n\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { temperature: '', type: 'c' }\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this)\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this)\n  }\n  handleCelsiusChange(temperature) {\n    this.setState({ temperature, type: 'c' })\n  }\n  handleFahrenheitChange(temperature) {\n    this.setState({ temperature, type: 'f' })\n  }\n  render() {\n    const type = this.state.type\n    const temperature = this.state.temperature\n    const celsius = type === 'f' ? convert(temperature, toCelsius) : temperature\n    const fahrenheit = type === 'c' ? convert(temperature, toFahrenheit) : temperature\n    return (\n      <div>\n        <TemperatureInput \n          type='c'\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput \n          type='f'\n          temperature={fahrenheit} \n          onTemperatureChange={handleFahrenheitChange} />\n      </div>\n\n    )\n  }\n}\nexport default Calculator"]},"metadata":{},"sourceType":"module"}