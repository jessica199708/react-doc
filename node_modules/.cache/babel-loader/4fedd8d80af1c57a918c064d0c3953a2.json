{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/react-doc/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport List from './components/List';\nimport Footer from './components/Footer';\nimport { nanoid } from 'nanoid';\nimport './App.css'; // App.js is normal javascript file which has JSX code inside render function. \n// The name App is user-defined you can keep any name but remember to save as .js file.\n// 状态在哪里，操作状态的方法就在哪里\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: nanoid(),\n        name: 'eat',\n        done: true\n      }, {\n        id: nanoid(),\n        name: 'sleep',\n        done: true\n      }, {\n        id: nanoid(),\n        name: 'coding',\n        done: false\n      }]\n    };\n\n    this.addTodos = todoObj => {\n      const {\n        todos\n      } = this.state;\n      const newTodos = [todoObj, ...todos]; // add new todo at front list\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.updateTodos = (id, done) => {\n      const {\n        todos\n      } = this.state;\n      const newTodos = todos.map(todoObj => {\n        if (todoObj.id === id) return { ...todoObj,\n          done\n        }; // change done\n        else return todoObj;\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.deleteTodos = id => {\n      const {\n        todos\n      } = this.state;\n      const newTodos = todos.filter(todoObj => {\n        return todoObj.id !== id;\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.checkAllTodo = () => {};\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          addTodos: this.addTodos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          todos: todos,\n          updateTodos: this.updateTodos,\n          deleteTodos: this.deleteTodos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          todos: todos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jia/Desktop/react-doc/src/App.js"],"names":["React","Component","Header","List","Footer","nanoid","App","state","todos","id","name","done","addTodos","todoObj","newTodos","setState","updateTodos","map","deleteTodos","filter","checkAllTodo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,WAAP,C,CACA;AACA;AAEA;;;AAEA,eAAe,MAAMC,GAAN,SAAkBN,KAAK,CAACC,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE7CM,KAF6C,GAErC;AACJC,MAAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,EAAE,EAAEJ,MAAM,EAAZ;AAAgBK,QAAAA,IAAI,EAAE,KAAtB;AAA6BC,QAAAA,IAAI,EAAE;AAAnC,OADG,EAEH;AAAEF,QAAAA,EAAE,EAAEJ,MAAM,EAAZ;AAAgBK,QAAAA,IAAI,EAAE,OAAtB;AAA+BC,QAAAA,IAAI,EAAE;AAArC,OAFG,EAGH;AAAEF,QAAAA,EAAE,EAAEJ,MAAM,EAAZ;AAAgBK,QAAAA,IAAI,EAAE,QAAtB;AAAgCC,QAAAA,IAAI,EAAE;AAAtC,OAHG;AADH,KAFqC;;AAAA,SAW7CC,QAX6C,GAWjCC,OAAD,IAAa;AACpB,YAAM;AAACL,QAAAA;AAAD,UAAU,KAAKD,KAArB;AACA,YAAMO,QAAQ,GAAG,CAACD,OAAD,EAAU,GAAGL,KAAb,CAAjB,CAFoB,CAEkB;;AACtC,WAAKO,QAAL,CAAc;AAACP,QAAAA,KAAK,EAAEM;AAAR,OAAd;AACH,KAf4C;;AAAA,SAkB7CE,WAlB6C,GAkB/B,CAACP,EAAD,EAAKE,IAAL,KAAc;AACxB,YAAM;AAACH,QAAAA;AAAD,UAAU,KAAKD,KAArB;AACA,YAAMO,QAAQ,GAAGN,KAAK,CAACS,GAAN,CAAWJ,OAAD,IAAa;AACpC,YAAGA,OAAO,CAACJ,EAAR,KAAeA,EAAlB,EAAsB,OAAO,EAAC,GAAGI,OAAJ;AAAaF,UAAAA;AAAb,SAAP,CAAtB,CAAiD;AAAjD,aACK,OAAOE,OAAP;AACR,OAHgB,CAAjB;AAIA,WAAKE,QAAL,CAAc;AAACP,QAAAA,KAAK,EAAEM;AAAR,OAAd;AAEH,KA1B4C;;AAAA,SA6B7CI,WA7B6C,GA6B9BT,EAAD,IAAQ;AAClB,YAAM;AAACD,QAAAA;AAAD,UAAU,KAAKD,KAArB;AACA,YAAMO,QAAQ,GAAGN,KAAK,CAACW,MAAN,CAAcN,OAAD,IAAa;AACtC,eAAOA,OAAO,CAACJ,EAAR,KAAeA,EAAtB;AACJ,OAFgB,CAAjB;AAGA,WAAKM,QAAL,CAAc;AAACP,QAAAA,KAAK,EAAEM;AAAR,OAAd;AACH,KAnC4C;;AAAA,SAqC7CM,YArC6C,GAqC9B,MAAK,CAEnB,CAvC4C;AAAA;;AAyC7CC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE,KAAKK;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,KAAb;AAAoB,UAAA,WAAW,EAAE,KAAKQ,WAAtC;AAAmD,UAAA,WAAW,EAAE,KAAKE;AAArE;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEV;AAAf;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AApD4C","sourcesContent":["import React, { Component } from 'react';\nimport Header from './components/Header'\nimport List from './components/List'\nimport Footer from './components/Footer'\nimport {nanoid} from 'nanoid'\nimport './App.css';\n// App.js is normal javascript file which has JSX code inside render function. \n// The name App is user-defined you can keep any name but remember to save as .js file.\n\n// 状态在哪里，操作状态的方法就在哪里\n\nexport default class App extends React.Component {\n    // initiallize states\n    state = {\n        todos: [\n            { id: nanoid(), name: 'eat', done: true },\n            { id: nanoid(), name: 'sleep', done: true },\n            { id: nanoid(), name: 'coding', done: false },\n        ]\n    }\n\n    // add a todo object{}\n    addTodos = (todoObj) => {\n        const {todos} = this.state\n        const newTodos = [todoObj, ...todos]  // add new todo at front list\n        this.setState({todos: newTodos})\n    }\n\n    // update the todo object in state\n    updateTodos = (id, done) => {\n        const {todos} = this.state\n        const newTodos = todos.map((todoObj) => {\n            if(todoObj.id === id) return {...todoObj, done}  // change done\n            else return todoObj\n        })\n        this.setState({todos: newTodos})\n\n    }\n    \n    // delete todo\n    deleteTodos = (id) => {\n        const {todos} = this.state\n        const newTodos = todos.filter((todoObj) => {\n             return todoObj.id !== id\n        })\n        this.setState({todos: newTodos})\n    }\n\n    checkAllTodo = () =>{\n        \n    }\n\n    render() {\n        const { todos } = this.state\n        return (\n            <div className='todo-container'>\n                <div className='todo-wrap'>\n                    <Header addTodos={this.addTodos} />\n                    <List todos={todos} updateTodos={this.updateTodos} deleteTodos={this.deleteTodos}/>\n                    <Footer todos={todos}/>\n                </div>\n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}