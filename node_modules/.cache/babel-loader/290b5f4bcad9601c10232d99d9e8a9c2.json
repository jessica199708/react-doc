{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/react-doc/src/App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'; // App.js is normal javascript file which has JSX code inside render function. \n// The name App is user-defined you can keep any name but remember to save as .js file.\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1>Hello World!</h1>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\n// function formatName(user) {\n//   return user.firstName + ' ' + user.lastName\n// }\n// // export function component\n// export function myelement(user) {   \n//   if (user) {\n//     return <h1>hello, {formatName(user)}</h1>\n//   } else {\n//     return <h1>hello, starnger</h1>\n//   }\n// }\n// class App extends Component {\n// state = {\n//   name: 'rose',\n//   age: 0,\n// };\n// 多次setState函数方式（preState拿到了上次setState之后的结果，作为参数传递给下一个setState，从感觉上像是立马更新了state）不合并\n// click = () => {\n//   console.log('start!')\n//   this.setState((preState) => {\n//     console.log('pre1:', preState)\n//     return { name: 'name1', age: preState.age + 1 }\n//   })\n//   this.setState((preState) => {\n//     console.log('pre2:', preState)\n//     return { name: 'name2', age: preState.age + 1 }\n//   })\n//   this.setState((preState) => {\n//     console.log('pre3:', preState)\n//     return { name: 'name3', age: preState.age + 1 }\n//   })\n//   console.log('end!')\n// };\n// 多次setState对象方式（每次setState都执行，执行后没有立马更新this.state,每次setState里取得this.state的值都是最初的值）合并\n// click = () => {\n//   console.log('start')\n//   this.setState((state) => ({ name: 'name1', age: state.age + 1 }))\n//   this.setState((state) => ({ name: 'name2', age: state.age + 1 }))\n//   this.setState((state) => ({ name: 'name3', age: state.age + 1 }))  // setState触发但是没有render\n//   this.setState((state) => ({ name: 'name4', age: state.age + 1 }))   // age：5/10/15...\n//   // this.setState({ name: 'name6', age: this.state.age + 1 })   // age: 2/4/6...   从这之后开始算（name4+name5） 0+1+1 = 2\n//   this.setState((state) => ({ name: 'name5', age: state.age + 1 }))\n//   console.log('end')\n// };\n// state = {\n//   count: 0\n// }\n// click = () => {\n//   this.setState({ count: this.state.count + 1 });\n//   console.log(\"console: \" + this.state.count); // count: 0   第一步\n//   this.setState({ count: this.state.count + 1 }, () => {   // count: 1   第二步\n//     console.log(\"console from callback: \" + this.state.count); // count: 2   第五步\n//   });\n//   this.setState(prevState => {\n//     console.log(\"console from func: \" + prevState.count); // count: 1  第三步\n//     return {\n//       count: prevState.count + 1  // count:2  第四步  \n//     };\n//   }, () => {\n//     console.log('last console: ' + this.state.count) // count:2  第六步  \n//   });\n// }\n// render() {\n//   const { count } = this.state\n//   return (\n//     <div>\n//       <span>{count}</span>\n//       <button id='btn' onClick={this.click}>click me!</button>\n//     </div>\n//   )\n// }\n// render() {\n//   console.log('render...', this.state);\n//   const { name, age } = this.state;\n//   return (\n//     <div>\n//       <span>{name + '---' + age}</span>\n//       <button id='btn' onClick={this.click}>click me!</button>\n//     </div>\n//   )\n// }\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Enter the temperature in C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/jia/Desktop/react-doc/src/App.js"],"names":["React","Component","Calculator","constructor","props","render"],"mappings":";AAAA;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACE;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEA;;;;AAGA,MAAMC,UAAN,SAAyBF,KAAK,CAACC,SAA/B,CAAwC;AACtCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAED;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAZqC;;AAcxC,eAAeH,UAAf","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\n// App.js is normal javascript file which has JSX code inside render function. \n// The name App is user-defined you can keep any name but remember to save as .js file.\n\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1>Hello World!</h1>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n\n// function formatName(user) {\n//   return user.firstName + ' ' + user.lastName\n// }\n\n// // export function component\n// export function myelement(user) {   \n//   if (user) {\n//     return <h1>hello, {formatName(user)}</h1>\n//   } else {\n//     return <h1>hello, starnger</h1>\n//   }\n// }\n\n\n// class App extends Component {\n  // state = {\n  //   name: 'rose',\n  //   age: 0,\n  // };\n\n  // 多次setState函数方式（preState拿到了上次setState之后的结果，作为参数传递给下一个setState，从感觉上像是立马更新了state）不合并\n\n  // click = () => {\n  //   console.log('start!')\n\n  //   this.setState((preState) => {\n  //     console.log('pre1:', preState)\n  //     return { name: 'name1', age: preState.age + 1 }\n  //   })\n\n  //   this.setState((preState) => {\n  //     console.log('pre2:', preState)\n  //     return { name: 'name2', age: preState.age + 1 }\n  //   })\n\n  //   this.setState((preState) => {\n  //     console.log('pre3:', preState)\n  //     return { name: 'name3', age: preState.age + 1 }\n  //   })\n\n\n  //   console.log('end!')\n  // };\n\n  // 多次setState对象方式（每次setState都执行，执行后没有立马更新this.state,每次setState里取得this.state的值都是最初的值）合并\n\n  // click = () => {\n  //   console.log('start')\n  //   this.setState((state) => ({ name: 'name1', age: state.age + 1 }))\n  //   this.setState((state) => ({ name: 'name2', age: state.age + 1 }))\n  //   this.setState((state) => ({ name: 'name3', age: state.age + 1 }))  // setState触发但是没有render\n  //   this.setState((state) => ({ name: 'name4', age: state.age + 1 }))   // age：5/10/15...\n  //   // this.setState({ name: 'name6', age: this.state.age + 1 })   // age: 2/4/6...   从这之后开始算（name4+name5） 0+1+1 = 2\n  //   this.setState((state) => ({ name: 'name5', age: state.age + 1 }))\n  //   console.log('end')\n  // };\n\n  // state = {\n  //   count: 0\n  // }\n  // click = () => {\n  //   this.setState({ count: this.state.count + 1 });\n  //   console.log(\"console: \" + this.state.count); // count: 0   第一步\n  //   this.setState({ count: this.state.count + 1 }, () => {   // count: 1   第二步\n  //     console.log(\"console from callback: \" + this.state.count); // count: 2   第五步\n  //   });\n  //   this.setState(prevState => {\n  //     console.log(\"console from func: \" + prevState.count); // count: 1  第三步\n  //     return {\n  //       count: prevState.count + 1  // count:2  第四步  \n  //     };\n  //   }, () => {\n  //     console.log('last console: ' + this.state.count) // count:2  第六步  \n  //   });\n\n  // }\n  // render() {\n  //   const { count } = this.state\n  //   return (\n  //     <div>\n  //       <span>{count}</span>\n  //       <button id='btn' onClick={this.click}>click me!</button>\n  //     </div>\n  //   )\n  // }\n\n\n  // render() {\n  //   console.log('render...', this.state);\n  //   const { name, age } = this.state;\n  //   return (\n  //     <div>\n  //       <span>{name + '---' + age}</span>\n  //       <button id='btn' onClick={this.click}>click me!</button>\n  //     </div>\n  //   )\n  // }\n// }\n\n// export default App;\n\n\nclass Calculator extends React.Component{\n  constructor(props){\n    super(props)\n\n  }\n\n  render() {\n    return (\n      <fieldset>\n        <legend>Enter the temperature in C</legend>\n      </fieldset>\n    )\n  }\n}\nexport default Calculator"]},"metadata":{},"sourceType":"module"}